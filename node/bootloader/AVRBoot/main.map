Archive member included because of file (symbol)

f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328.o (exit)
f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              out/main.o (__do_clear_bss)
f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega328.o)
                              out/main.o (__eerd_byte_m328)
f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eewr_byte_atmega328.o)
                              out/main.o (__eewr_byte_m328)

Allocating common symbols
Common symbol       size              file

address             0x2               out/main.o
buff                0x100             out/main.o
length              0x2               out/main.o
i                   0x1               out/main.o
flags               0x1               out/main.o

Discarded input sections

 .data          0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328.o
 .bss           0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328.o
 .text          0x00000000        0x0 out/main.o
 .data          0x00000000        0x0 out/main.o
 .bss           0x00000000        0x0 out/main.o
 .text.putch    0x00000000        0x0 out/main.o
 .text          0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .data          0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 .text          0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega328.o)
 .data          0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega328.o)
 .bss           0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega328.o)
 .text          0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eewr_byte_atmega328.o)
 .data          0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eewr_byte_atmega328.o)
 .bss           0x00000000        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eewr_byte_atmega328.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328.o
Address of section .text set to 0x7800
LOAD out/main.o
LOAD f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00007800      0x5c2
 *(.vectors)
 .vectors       0x00007800       0x68 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328.o
                0x00007800                __vectors
                0x00007800                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00007868                . = ALIGN (0x2)
                0x00007868                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00007868        0x0 linker stubs
 *(.trampolines*)
                0x00007868                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00007868                __ctors_start = .
 *(.ctors)
                0x00007868                __ctors_end = .
                0x00007868                __dtors_start = .
 *(.dtors)
                0x00007868                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00007868        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328.o
                0x00007868                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00007868        0xc f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00007874       0x10 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00007874                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00007884        0x8 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328.o
 *(.init9)
 *(.text)
 .text          0x0000788c        0x4 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm328.o
                0x0000788c                __vector_22
                0x0000788c                __vector_1
                0x0000788c                __vector_24
                0x0000788c                __vector_12
                0x0000788c                __bad_interrupt
                0x0000788c                __vector_6
                0x0000788c                __vector_3
                0x0000788c                __vector_23
                0x0000788c                __vector_25
                0x0000788c                __vector_11
                0x0000788c                __vector_13
                0x0000788c                __vector_17
                0x0000788c                __vector_19
                0x0000788c                __vector_7
                0x0000788c                __vector_5
                0x0000788c                __vector_4
                0x0000788c                __vector_9
                0x0000788c                __vector_2
                0x0000788c                __vector_21
                0x0000788c                __vector_15
                0x0000788c                __vector_8
                0x0000788c                __vector_14
                0x0000788c                __vector_10
                0x0000788c                __vector_16
                0x0000788c                __vector_18
                0x0000788c                __vector_20
                0x00007890                . = ALIGN (0x2)
 *(.text.*)
 .text.getch    0x00007890       0x4c out/main.o
                0x00007890                getch
 .text.getNch   0x000078dc       0x1a out/main.o
                0x000078dc                getNch
 .text.byte_response
                0x000078f6       0x38 out/main.o
                0x000078f6                byte_response
 .text.nothing_response
                0x0000792e       0x26 out/main.o
                0x0000792e                nothing_response
 .text.main     0x00007954      0x43e out/main.o
                0x00007954                main
 .text.avr-libc
                0x00007d92       0x10 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eerd_byte_atmega328.o)
                0x00007d92                __eerd_byte_m328
 .text.avr-libc
                0x00007da2       0x1c f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a(eewr_byte_atmega328.o)
                0x00007da4                __eewr_r18_m328
                0x00007da2                __eewr_byte_m328
                0x00007dbe                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00007dbe        0x0 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00007dbe                exit
                0x00007dbe                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00007dbe        0x4 f:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00007dc2                _etext = .

.data           0x00800100        0x0 load address 0x00007dc2
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100      0x108
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 *(.bss*)
 .bss.app_start
                0x00800100        0x2 out/main.o
                0x00800100                app_start
 *(COMMON)
 COMMON         0x00800102      0x106 out/main.o
                0x00800102                address
                0x00800104                buff
                0x00800204                length
                0x00800206                i
                0x00800207                flags
                0x00800208                PROVIDE (__bss_end, .)
                0x00007dc2                __data_load_start = LOADADDR (.data)
                0x00007dc2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800208        0x0
                0x00800208                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800208                PROVIDE (__noinit_end, .)
                0x00800208                _end = .
                0x00800208                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(out/main.elf elf32-avr)
LOAD linker stubs
