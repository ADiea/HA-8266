DEVICE     = atmega8
CLOCK      = 8000000
PROGRAMMER = -c usbasp
OBJECTS    = main.o radio.o key.o ws2812.o spi.o uart.o systimer.o led.o relay.o light.o
#FUSES      = -U lfuse:w:0xe0:m -U hfuse:w:0xc9:m
FUSES      = -U lfuse:w:0x94:m -U hfuse:w:0xdf:m
# generated by http://www.engbedded.com/fusecalc/
 
AVRDUDE = avrdude $(PROGRAMMER) -p $(DEVICE) 
COMPILE = avr-gcc -Wall -Os -DF_CPU=$(CLOCK) -mmcu=$(DEVICE) -fdata-sections -ffunction-sections -Wl,--gc-sections -Wl,-Map=main.map
 
all:	main.hex
 
.c.o:
	$(COMPILE) -c $< -o out/$@
 
.S.o:
	$(COMPILE) -x assembler-with-cpp -c $< -o out/$@
 
.c.s:
	$(COMPILE) -S $< -o out/$@
 
flash:	all
	$(AVRDUDE) -U flash:w:out/main.hex:i
 
fuse:
	$(AVRDUDE) $(FUSES)
 
install: flash fuse
 
load: all
	bootloadHID main.hex
 
clean:
	rm -f out/*
 
main.elf: $(OBJECTS)
	$(COMPILE) -o out/main.elf $(addprefix out/,$(OBJECTS))
 
main.hex: main.elf
	rm -f out/main.hex
	avr-objcopy -j .text -j .data -O ihex out/main.elf out/main.hex
	avr-objdump -h out/main.elf
	
disasm:	main.elf
	avr-objdump -d main.elf
 
cpp:
	$(COMPILE) -E main.c
